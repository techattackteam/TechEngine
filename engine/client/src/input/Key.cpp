#include "Key.hpp"
#include <GLFW/glfw3.h>

namespace TechEngine {
    KeyCode& Key::getKeyCode() {
        return keyCode;
    }


    std::string Key::getKeyName() const {
        switch (keyCode) {
            case Q:
                return "Q";
            case W:
                return "W";
            case E:
                return "E";
            case R:
                return "R";
            case T:
                return "T";
            case Y:
                return "Y";
            case U:
                return "U";
            case I:
                return "I";
            case O:
                return "O";
            case P:
                return "P";
            case A:
                return "A";
            case S:
                return "S";
            case D:
                return "D";
            case F:
                return "F";
            case G:
                return "G";
            case H:
                return "H";
            case J:
                return "J";
            case K:
                return "K";
            case L:
                return "L";
            case Z:
                return "Z";
            case X:
                return "X";
            case C:
                return "C";
            case V:
                return "V";
            case B:
                return "B";
            case N:
                return "N";
            case M:
                return "M";
            case ZERO:
                return "0";
            case ONE:
                return "1";
            case TWO:
                return "2";
            case THREE:
                return "3";
            case FOUR:
                return "4";
            case FIVE:
                return "5";
            case SIX:
                return "6";
            case SEVEN:
                return "7";
            case EIGHT:
                return "8";
            case NINE:
                return "9";
            case ESC:
                return "escape";
            case ARROW_UP:
                return "UP";
            case ARROW_DOWN:
                return "DOWN";
            case ARROW_RIGHT:
                return "RIGHT";
            case ARROW_LEFT:
                return "LEFT";
            case MOUSE_1:
                return "MOUSE_1";
            case MOUSE_2:
                return "MOUSE_2";
            case MOUSE_3:
                return "MOUSE_3";
            case SPACE:
                return "SPACE";
            case ENTER:
                return "ENTER";
            case TAB:
                return "TAB";
            case BACKSPACE:
                return "BACKSPACE";
            case DEL:
                return "DELETE";
            case LEFT_SHIFT:
                return "LEFT_SHIFT";
            case RIGHT_SHIFT:
                return "RIGHT_SHIFT";
            case LEFT_CTRL:
                return "LEFT_CTRL";
            case RIGHT_CTRL:
                return "RIGHT_CTRL";
            case LEFT_ALT:
                return "LEFT_ALT";
            case RIGHT_ALT:
                return "RIGHT_ALT";
            default:
                return "";
        }
    }

    KeyCode Key::getKeyCode(int key) const {
        switch (key) {
            case GLFW_KEY_Q:
                return KeyCode::Q;
            case GLFW_KEY_W:
                return KeyCode::W;
            case GLFW_KEY_E:
                return KeyCode::E;
            case GLFW_KEY_R:
                return KeyCode::R;
            case GLFW_KEY_T:
                return KeyCode::T;
            case GLFW_KEY_Y:
                return KeyCode::Y;
            case GLFW_KEY_U:
                return KeyCode::U;
            case GLFW_KEY_I:
                return KeyCode::I;
            case GLFW_KEY_O:
                return KeyCode::O;
            case GLFW_KEY_P:
                return KeyCode::P;
            case GLFW_KEY_A:
                return KeyCode::A;
            case GLFW_KEY_S:
                return KeyCode::S;
            case GLFW_KEY_D:
                return KeyCode::D;
            case GLFW_KEY_F:
                return KeyCode::F;
            case GLFW_KEY_G:
                return KeyCode::G;
            case GLFW_KEY_H:
                return KeyCode::H;
            case GLFW_KEY_J:
                return KeyCode::J;
            case GLFW_KEY_K:
                return KeyCode::K;
            case GLFW_KEY_L:
                return KeyCode::L;
            case GLFW_KEY_Z:
                return KeyCode::Z;
            case GLFW_KEY_X:
                return KeyCode::X;
            case GLFW_KEY_C:
                return KeyCode::C;
            case GLFW_KEY_V:
                return KeyCode::V;
            case GLFW_KEY_B:
                return KeyCode::B;
            case GLFW_KEY_N:
                return KeyCode::N;
            case GLFW_KEY_M:
                return KeyCode::M;
            case GLFW_KEY_0:
            case GLFW_KEY_KP_0:
                return KeyCode::ZERO;
            case GLFW_KEY_1:
            case GLFW_KEY_KP_1:
                return KeyCode::ONE;
            case GLFW_KEY_2:
            case GLFW_KEY_KP_2:
                return KeyCode::TWO;
            case GLFW_KEY_3:
            case GLFW_KEY_KP_3:
                return KeyCode::THREE;
            case GLFW_KEY_4:
            case GLFW_KEY_KP_4:
                return KeyCode::FOUR;
            case GLFW_KEY_5:
            case GLFW_KEY_KP_5:
                return KeyCode::FIVE;
            case GLFW_KEY_6:
            case GLFW_KEY_KP_6:
                return KeyCode::SIX;
            case GLFW_KEY_7:
            case GLFW_KEY_KP_7:
                return KeyCode::SEVEN;
            case GLFW_KEY_8:
            case GLFW_KEY_KP_8:
                return KeyCode::EIGHT;
            case GLFW_KEY_9:
            case GLFW_KEY_KP_9:
                return KeyCode::NINE;
            case GLFW_KEY_ESCAPE:
                return KeyCode::ESC;
            case GLFW_KEY_UP:
                return KeyCode::ARROW_UP;
            case GLFW_KEY_DOWN:
                return KeyCode::ARROW_DOWN;
            case GLFW_KEY_RIGHT:
                return KeyCode::ARROW_RIGHT;
            case GLFW_KEY_LEFT:
                return KeyCode::ARROW_LEFT;
            case GLFW_MOUSE_BUTTON_1:
                return KeyCode::MOUSE_1;
            case GLFW_MOUSE_BUTTON_2:
                return KeyCode::MOUSE_2;
            case GLFW_MOUSE_BUTTON_3:
                return KeyCode::MOUSE_3;
            case GLFW_KEY_SPACE:
                return KeyCode::SPACE;
            case GLFW_KEY_ENTER:
                return KeyCode::ENTER;
            case GLFW_KEY_TAB:
                return KeyCode::TAB;
            case GLFW_KEY_BACKSPACE:
                return KeyCode::BACKSPACE;
            case GLFW_KEY_DELETE:
                return KeyCode::DEL;
            case GLFW_KEY_LEFT_SHIFT:
                return KeyCode::LEFT_SHIFT;
            case GLFW_KEY_RIGHT_SHIFT:
                return KeyCode::RIGHT_SHIFT;
            case GLFW_KEY_LEFT_CONTROL:
                return KeyCode::LEFT_CTRL;
            case GLFW_KEY_RIGHT_CONTROL:
                return KeyCode::RIGHT_CTRL;
            case GLFW_KEY_LEFT_ALT:
                return KeyCode::LEFT_ALT;
            case GLFW_KEY_RIGHT_ALT:
                return KeyCode::RIGHT_ALT;
            default:
                return KeyCode::None;
        }
    }
}
